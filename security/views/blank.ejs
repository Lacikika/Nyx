<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Settings - Nyx Bot Panel</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      color: #333;
      line-height: 1.6;
    }

    .container {
      max-width: 1000px;
      margin: 0 auto;
      padding: 2rem;
    }

    .header {
      text-align: center;
      margin-bottom: 3rem;
      color: white;
    }

    .header h1 {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
      text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .header p {
      font-size: 1.1rem;
      opacity: 0.9;
      font-weight: 300;
    }

    .nav-links {
      display: flex;
      justify-content: center;
      gap: 1rem;
      margin-bottom: 2rem;
      flex-wrap: wrap;
    }

    .nav-link {
      padding: 0.75rem 1.5rem;
      background: rgba(255, 255, 255, 0.2);
      color: white;
      text-decoration: none;
      border-radius: 25px;
      font-weight: 500;
      transition: all 0.3s ease;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255,255,255,0.3);
    }

    .nav-link:hover, .nav-link.active {
      background: rgba(255, 255, 255, 0.3);
      transform: translateY(-2px);
    }

    .settings-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-bottom: 3rem;
    }

    .setting-card {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 20px;
      padding: 2rem;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      border: 1px solid rgba(255,255,255,0.2);
      transition: all 0.3s ease;
    }

    .setting-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 40px rgba(0,0,0,0.15);
    }

    .setting-header {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 2px solid #f0f0f0;
    }

    .setting-icon {
      font-size: 1.5rem;
      background: linear-gradient(135deg, #667eea, #764ba2);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .setting-title {
      font-size: 1.3rem;
      font-weight: 600;
      color: #333;
    }

    .setting-description {
      color: #666;
      margin-bottom: 1.5rem;
      line-height: 1.6;
    }

    .setting-control {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 1rem;
    }

    .setting-label {
      font-weight: 500;
      color: #333;
    }

    .toggle-switch {
      position: relative;
      width: 50px;
      height: 24px;
      background: #ccc;
      border-radius: 12px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .toggle-switch.active {
      background: linear-gradient(135deg, #667eea, #764ba2);
    }

    .toggle-switch::after {
      content: '';
      position: absolute;
      top: 2px;
      left: 2px;
      width: 20px;
      height: 20px;
      background: white;
      border-radius: 50%;
      transition: all 0.3s ease;
    }

    .toggle-switch.active::after {
      transform: translateX(26px);
    }

    .input-field {
      width: 100%;
      padding: 0.75rem 1rem;
      border: 2px solid #e1e5e9;
      border-radius: 8px;
      font-size: 0.95rem;
      transition: all 0.3s ease;
      margin-top: 0.5rem;
    }

    .input-field:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .btn {
      padding: 0.75rem 1.5rem;
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: white;
      border: none;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      margin-top: 1rem;
    }

    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
    }

    .btn-secondary {
      background: #6c757d;
    }

    .btn-danger {
      background: #dc3545;
    }

    .status-indicator {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      font-size: 0.85rem;
      font-weight: 500;
      margin-top: 1rem;
    }

    .status-online {
      background: rgba(72, 187, 120, 0.1);
      color: #48bb78;
      border: 1px solid rgba(72, 187, 120, 0.3);
    }

    .status-offline {
      background: rgba(245, 101, 101, 0.1);
      color: #f56565;
      border: 1px solid rgba(245, 101, 101, 0.3);
    }

    .info-section {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 20px;
      padding: 2rem;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      border: 1px solid rgba(255,255,255,0.2);
      margin-bottom: 2rem;
    }

    .info-header {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 2px solid #f0f0f0;
    }

    .info-icon {
      font-size: 1.5rem;
      background: linear-gradient(135deg, #667eea, #764ba2);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .info-title {
      font-size: 1.5rem;
      font-weight: 600;
      color: #333;
    }

    .back-link {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 1rem 2rem;
      background: rgba(255, 255, 255, 0.2);
      color: white;
      text-decoration: none;
      border-radius: 25px;
      font-weight: 500;
      transition: all 0.3s ease;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255,255,255,0.3);
    }

    .back-link:hover {
      background: rgba(255, 255, 255, 0.3);
      transform: translateY(-2px);
    }

    @media (max-width: 768px) {
      .container {
        padding: 1rem;
      }

      .header h1 {
        font-size: 2rem;
      }

      .settings-grid {
        grid-template-columns: 1fr;
      }
    }

    .notification {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 1rem 1.5rem;
      border-radius: 12px;
      box-shadow: 0 8px 25px rgba(0,0,0,0.2);
      transform: translateX(400px);
      transition: all 0.3s ease;
      z-index: 1000;
    }

    .notification.show {
      transform: translateX(0);
    }

    .notification.success {
      background: #48bb78;
      color: white;
    }

    .notification.error {
      background: #f56565;
      color: white;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1><i class="fas fa-cog"></i> Settings & Configuration</h1>
      <p>Manage your bot panel preferences and system settings</p>
    </div>

    <div class="nav-links">
      <a href="/" class="nav-link"><i class="fas fa-home"></i> Dashboard</a>
      <a href="/statistics" class="nav-link"><i class="fas fa-chart-bar"></i> Statistics</a>
      <a href="/console" class="nav-link"><i class="fas fa-terminal"></i> Console</a>
      <a href="/blank" class="nav-link active"><i class="fas fa-cog"></i> Settings</a>
    </div>

    <div class="info-section">
      <div class="info-header">
        <div class="info-icon"><i class="fas fa-info-circle"></i></div>
        <h2 class="info-title">System Status</h2>
      </div>
      <div class="settings-grid">
        <div class="setting-card">
          <div class="setting-header">
            <div class="setting-icon"><i class="fas fa-robot"></i></div>
            <h3 class="setting-title">Bot Status</h3>
          </div>
          <div class="setting-description">
            Current status of the Nyx Discord bot and its core services.
          </div>
          <div class="status-indicator status-online">
            <i class="fas fa-circle"></i>
            Bot Online & Operational
          </div>
        </div>

        <div class="setting-card">
          <div class="setting-header">
            <div class="setting-icon"><i class="fas fa-database"></i></div>
            <h3 class="setting-title">Database</h3>
          </div>
          <div class="setting-description">
            Encrypted data storage system status and health monitoring.
          </div>
          <div class="status-indicator status-online">
            <i class="fas fa-shield-alt"></i>
            Encrypted & Secure
          </div>
        </div>

        <div class="setting-card">
          <div class="setting-header">
            <div class="setting-icon"><i class="fas fa-globe"></i></div>
            <h3 class="setting-title">Web Panel</h3>
          </div>
          <div class="setting-description">
            Web interface accessibility and security status.
          </div>
          <div class="status-indicator status-online">
            <i class="fas fa-lock"></i>
            Secure Connection
          </div>
        </div>
      </div>
    </div>

    <div class="settings-grid">
      <div class="setting-card">
        <div class="setting-header">
          <div class="setting-icon"><i class="fas fa-palette"></i></div>
          <h3 class="setting-title">Theme Settings</h3>
        </div>
        <div class="setting-description">
          Customize the appearance and visual preferences of the web panel.
        </div>
        <div class="setting-control">
          <span class="setting-label">Dark Mode</span>
          <div class="toggle-switch" onclick="toggleSetting(this)"></div>
        </div>
        <div class="setting-control">
          <span class="setting-label">Animations</span>
          <div class="toggle-switch active" onclick="toggleSetting(this)"></div>
        </div>
        <div class="setting-control">
          <span class="setting-label">Auto-refresh</span>
          <div class="toggle-switch active" onclick="toggleSetting(this)"></div>
        </div>
      </div>

      <div class="setting-card">
        <div class="setting-header">
          <div class="setting-icon"><i class="fas fa-bell"></i></div>
          <h3 class="setting-title">Notifications</h3>
        </div>
        <div class="setting-description">
          Configure alert preferences and notification settings.
        </div>
        <div class="setting-control">
          <span class="setting-label">Error Alerts</span>
          <div class="toggle-switch active" onclick="toggleSetting(this)"></div>
        </div>
        <div class="setting-control">
          <span class="setting-label">System Updates</span>
          <div class="toggle-switch active" onclick="toggleSetting(this)"></div>
        </div>
        <div class="setting-control">
          <span class="setting-label">Log Notifications</span>
          <div class="toggle-switch" onclick="toggleSetting(this)"></div>
        </div>
      </div>

      <div class="setting-card">
        <div class="setting-header">
          <div class="setting-icon"><i class="fas fa-shield-alt"></i></div>
          <h3 class="setting-title">Security</h3>
        </div>
        <div class="setting-description">
          Manage security settings and access controls for the panel.
        </div>
        <div class="setting-control">
          <span class="setting-label">Two-Factor Auth</span>
          <div class="toggle-switch" onclick="toggleSetting(this)"></div>
        </div>
        <div class="setting-control">
          <span class="setting-label">Session Timeout</span>
          <div class="toggle-switch active" onclick="toggleSetting(this)"></div>
        </div>
        <button class="btn btn-secondary">
          <i class="fas fa-key"></i>
          Change Password
        </button>
      </div>

      <div class="setting-card">
        <div class="setting-header">
          <div class="setting-icon"><i class="fas fa-download"></i></div>
          <h3 class="setting-title">Data Management</h3>
        </div>
        <div class="setting-description">
          Export, backup, and manage your bot's data and configurations.
        </div>
        <button class="btn" onclick="exportData()">
          <i class="fas fa-download"></i>
          Export All Data
        </button>
        <button class="btn btn-secondary" onclick="backupData()">
          <i class="fas fa-save"></i>
          Create Backup
        </button>
        <button class="btn btn-danger" onclick="clearLogs()">
          <i class="fas fa-trash"></i>
          Clear Old Logs
        </button>
      </div>

      <div class="setting-card">
        <div class="setting-header">
          <div class="setting-icon"><i class="fas fa-tools"></i></div>
          <h3 class="setting-title">Advanced Settings</h3>
        </div>
        <div class="setting-description">
          Advanced configuration options for experienced users.
        </div>
        <label class="setting-label">Log Level</label>
        <select class="input-field">
          <option>Info</option>
          <option>Debug</option>
          <option>Warning</option>
          <option>Error</option>
        </select>
        <label class="setting-label">Refresh Interval (seconds)</label>
        <input type="number" class="input-field" value="5" min="1" max="60">
        <button class="btn">
          <i class="fas fa-save"></i>
          Save Settings
        </button>
      </div>

      <div class="setting-card">
        <div class="setting-header">
          <div class="setting-icon"><i class="fas fa-info-circle"></i></div>
          <h3 class="setting-title">About</h3>
        </div>
        <div class="setting-description">
          Information about the Nyx Bot panel and system details.
        </div>
        <div style="font-size: 0.9rem; color: #666; line-height: 1.8;">
          <strong>Version:</strong> 2.1.0<br>
          <strong>Build:</strong> 2024.01.15<br>
          <strong>Uptime:</strong> 2d 14h 32m<br>
          <strong>Memory:</strong> 128MB / 512MB<br>
          <strong>Encryption:</strong> AES-256-CBC
        </div>
        <button class="btn btn-secondary">
          <i class="fas fa-sync-alt"></i>
          Check for Updates
        </button>
      </div>
    </div>

    <a href="/" class="back-link">
      <i class="fas fa-arrow-left"></i>
      Back to Dashboard
    </a>
  </div>

  <div class="notification" id="notification">
    <i class="fas fa-check"></i> Settings saved successfully!
  </div>

  <script>
    function toggleSetting(element) {
      element.classList.toggle('active');
      showNotification('Setting updated successfully!', 'success');
    }

    function showNotification(message, type = 'success') {
      const notification = document.getElementById('notification');
      notification.textContent = message;
      notification.className = `notification ${type}`;
      notification.classList.add('show');
      setTimeout(() => {
        notification.classList.remove('show');
      }, 3000);
    }

    function exportData() {
      showNotification('Data export started...', 'success');
      // Simulate export process
      setTimeout(() => {
        const data = {
          timestamp: new Date().toISOString(),
          settings: 'exported',
          logs: 'included'
        };
        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `nyx-bot-export-${Date.now()}.json`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        showNotification('Data exported successfully!', 'success');
      }, 1000);
    }

    function backupData() {
      showNotification('Creating backup...', 'success');
      setTimeout(() => {
        showNotification('Backup created successfully!', 'success');
      }, 2000);
    }

    function clearLogs() {
      if (confirm('Are you sure you want to clear old logs? This action cannot be undone.')) {
        showNotification('Old logs cleared successfully!', 'success');
      }
    }

    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      // Animate cards on load
      const cards = document.querySelectorAll('.setting-card');
      cards.forEach((card, index) => {
        setTimeout(() => {
          card.style.opacity = '0';
          card.style.transform = 'translateY(20px)';
          card.style.transition = 'all 0.6s ease';
          setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
          }, 100);
        }, index * 100);
      });

      // Add click handlers for buttons
      const buttons = document.querySelectorAll('.btn');
      buttons.forEach(btn => {
        btn.addEventListener('click', function() {
          if (!this.onclick) {
            showNotification('Feature coming soon!', 'success');
          }
        });
      });
    });
  </script>
</body>
</html>